@using System.Collections.Generic
@using Estore.Web.ViewModels.Products
@model ProductstByCategoryViewModel

<!-- BSTORE-BREADCRUMB START -->
<ul class="bstore-breadcrumb">
    @if(@Model.Breadcrumb.ParentCategory.ParentCategory.ParentCategoryId == null) 
	{
		<li>
			<a asp-controller="Categories" asp-action="@Model.Breadcrumb.ParentCategory.ParentCategory.Name" asp-route-id="@Model.Breadcrumb.ParentCategory.ParentCategory.Id">
				@Model.Breadcrumb.ParentCategory.ParentCategory.Name
			</a>
			<span><i class="fa fa-caret-right"></i></span>
		</li>
		<li>
			<a asp-controller="Products" asp-action="@Model.Breadcrumb.ParentCategory.Name" asp-route-id="@Model.Breadcrumb.ParentCategory.Id">
				@Model.Breadcrumb.ParentCategory.Name
			</a>
			<span><i class="fa fa-caret-right"></i></span>
		</li>
		<li>@Model.Breadcrumb.Name</li>
	}
</ul>
<!-- BSTORE-BREADCRUMB END -->

<div class="row flex-row-reverse">
	<div class="col-lg-9">
		<div class="right-all-product">
			<!-- PRODUCT-CATEGORY-HEADER START -->
			<div class="product-category-header">
				<div class="category-header-image">
					<img src="@Model.CategoryImage" alt="category-header">
					<div class="category-header-text">
						@*<h2>@Model.CategoryName </h2>
						<strong>You will find here all woman fashion collections.</strong>
						<p>This category includes all the basics of your wardrobe and much more:</p>
						<p>shoes, accessories, printed t-shirts, feminine dresses, women's jeans!</p>*@
					</div>
				</div>
			</div>
			<!-- PRODUCT-CATEGORY-HEADER END -->
			<div class="product-category-title">
				<!-- PRODUCT-CATEGORY-TITLE START -->
				<h1>
					<span class="cat-name">@Model.CategoryName</span>
					<span class="count-product">There are @Model.CategoriesProductsCount products.</span>
				</h1>
				<!-- PRODUCT-CATEGORY-TITLE END -->
			</div>
			<div class="product-shooting-area">
				<div class="product-shooting-bar">
					<!-- SORT-BY START -->
					<div class="shoort-by">
						<label for="productShort">Sort by</label>
						<div class="short-select-option">
							<select name="sortby" id="productShort">
								<option value="">--</option>
								<option value="">Price: Lowest first</option>
								<option value="">Price: Highest first</option>
								<option value="">Product Name: A to Z</option>
								<option value="">Product Name: Z to A</option>
							</select>
						</div>
					</div>
					<!-- SORT-BY END -->
					<!-- SHOW-PAGE START -->
					<div class="show-page">
						<label for="perPage">Show</label>
						<div class="s-page-select-option">
							<select name="show" id="perPage">
								<option value="">11</option>
								<option value="">12</option>
							</select>
						</div>
						<span>per page</span>
					</div>
					<!-- SHOW-PAGE END -->
					<!-- VIEW-SYSTEAM START -->
					<div class="view-systeam">
						<label for="perPage">View:</label>
						<ul>
							<li><a href="shop-gird.html"><i class="fa fa-th-large"></i></a><br>Grid</li>
							<li class="active"><a href="shop-list.html"><i class="fa fa-th-list"></i></a><br>List</li>
						</ul>
					</div>
					<!-- VIEW-SYSTEAM END -->
				</div>
				
			</div>
		</div>
		<!-- ALL GATEGORY-PRODUCT START -->
		<div class="all-gategory-product">
			<div class="row">
				<ul class="gategory-product">
					@foreach (var product in @Model.CategoryProducts)
					{
						<!-- SINGLE ITEM START -->
						<li class="cat-product-list">
							<div class="row">
								<div class="col-md-4 col-12">
									<div class="single-product-item">
										<div class="product-image">
											<a href="#"><img src="@product.ImageUrl" alt="product-image"></a>
										</div>
									</div>
								</div>
								<div class="col-md-8 col-12">
									<div class="list-view-content">
										<div class="single-product-item">
											<div class="product-info">
												<div class="customar-comments-box">
													<a asp-controller="Products" asp-action="Details" asp-route-id="@product.Id">@product.Name </a>
													<div class="rating-box">
														<i class="fa fa-star"></i>
														<i class="fa fa-star"></i>
														<i class="fa fa-star"></i>
														<i class="fa fa-star"></i>
														<i class="fa fa-star"></i>
													</div>
													<div class="review-box">
														<span>4 Review(s)</span>
													</div>
												</div>
												<div class="product-datails">
													<p>@product.Description</p>
												</div>
												<div class="price-box">
													@if(@product.Discount != null) 
													{
														<span class="price">$@product.DiscountedPrice</span>
														<span class="old-price">$@product.Price.ToString("0.00")</span>								
													}
													else
													{
														<span class="price">$@product.Price.ToString("0.00")</span>
													}													
												</div>
											</div>
											<div class="overlay-content-list">
												<ul>
													<li><a href="#" title="Add to cart" class="add-cart-text">Add to
															cart</a></li>
													<li><a href="#" title="Add to wishlist"><i class="fa fa-heart-o"></i></a></li>
												</ul>
											</div>
										</div>
									</div>
								</div>
							</div>
						</li>
						<!-- SINGLE ITEM END -->
					}					
				</ul>
			</div>
		</div>
		<!-- ALL CATEGORY-PRODUCT END -->
		<!-- PRODUCT-SHOOTING-RESULT START -->
		<div class="product-shooting-result">
			<form action="#">
				<button class="btn compare-button">
					Compare (<span class="compare-value">1</span>)
					<i class="fa fa-chevron-right"></i>
				</button>
			</form>
			<div class="showing-item">
				<span>Showing 1 - @Model.ItemsPerPage of @Model.CategoriesProductsCount items</span>
			</div>
			<div class="showing-next-prev">
				<ul class="pagination-bar">
					@{
						var paramsPreviousPage = new Dictionary<string, string>
						{
							{ "id", @Model.CategoryId },
							{ "page", @Model.PreviousPageNumber.ToString() }
						};
					}
					@if (@Model.HasPreviousPage)
					{
						<li>									
							<a asp-controller="Products" asp-action="@Model.CategoryName" asp-all-route-data="paramsPreviousPage">
								<i class="fa fa-chevron-left disabled"></i>Previous
							</a>
						</li>
					}
					@for (var i = @Model.PageNumber - 1; i < @Model.PageNumber; i++)
					{
						@if (i > 0)
						{
							<li>
								<span><a class="pagi-num" asp-action="@Model.CategoryName" asp-all-route-data="paramsPreviousPage">@i</a></span>
							</li>
						}								   
					}
					<li class="active">
						<span><a class="pagi-num">@Model.PageNumber</a></span>
					</li>
					@{
						var paramsNextPage = new Dictionary<string, string>
						{
							{ "id", @Model.CategoryId },
							{ "page", @Model.NextPageNumber.ToString() }
						};
					}
					@for (var i = @Model.PageNumber + 1; i <= @Model.PageNumber + 1; i++)
					{
						@if (i <= Model.PagesCount)
						{
							<li>
								<span><a class="pagi-num" asp-action="@Model.CategoryName" asp-all-route-data="paramsNextPage">@i</a></span>
							</li> 
						}								  
					}
					@if (Model.HasNextPage)
					{
						<li>									
							<a asp-controller="Products" asp-action="@Model.CategoryName" asp-all-route-data="paramsNextPage">
								Next<i class="fa fa-chevron-right"></i>
							</a>
						</li>
					}
				</ul>
				<form action="#">
					<button class="btn showall-button">Show all</button>
				</form>
			</div>
		</div>
		<!-- PRODUCT-SHOOTING-RESULT END -->
	</div>

	<div class="col-lg-3">
		<vc:products-sidebar></vc:products-sidebar>
	</div>
</div>